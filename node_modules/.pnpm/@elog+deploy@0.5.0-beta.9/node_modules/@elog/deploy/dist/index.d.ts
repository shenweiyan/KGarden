import { DocDetail } from '@elog/types';
export * from '@elog/plugin-adapter';
export * from '@elog/sdk-confluence';

/**
 * 部署平台
 */
declare enum DeployPlatformEnum {
    LOCAL = "local",
    CONFLUENCE = "confluence"
}
/**
 * 本地部署相关
 */
declare enum FileNameEnum {
    TITLE = "title",
    URLNAME = "urlname"
}
declare enum FormatEnum {
    MARKDOWN = "markdown",
    MATTER_MARKDOWN = "matter-markdown",
    HTML = "html",
    WIKI = "wiki"
}

/**
 * local 配置
 */
interface LocalConfig {
    outputDir: string;
    filename: FileNameEnum;
    format: FormatEnum;
    catalog: boolean;
    formatExt?: string;
}
/**
 * 部署配置
 */
type DeployPlatformConfig = {
    [key in DeployPlatformEnum]: any;
};
type DeployConfig = {
    platform: DeployPlatformEnum;
} & DeployPlatformConfig;
/** 文档处理适配器 */
interface AdapterConfig {
    format: FormatEnum;
    formatExt?: string;
}
type AdapterFunction = (doc: DocDetail) => string;

/**
 * 部署器
 */
declare class Deploy {
    config: DeployConfig;
    deployClient: any;
    constructor(config: DeployConfig);
    initDeploy(): void;
    /**
     * 部署配置
     * @param articleList
     */
    deploy(articleList: DocDetail[]): Promise<void>;
}

export { AdapterConfig, AdapterFunction, DeployConfig, LocalConfig, Deploy as default };

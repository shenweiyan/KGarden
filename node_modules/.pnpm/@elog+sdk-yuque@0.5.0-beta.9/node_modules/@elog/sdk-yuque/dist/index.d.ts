import * as _elog_types from '@elog/types';
import { DocDetail, YuqueCatalog, BaseDoc } from '@elog/types';
import { RequestOptions } from '@elog/shared';

type FormatExtConfig = ((doc: DocDetail) => string) | string | boolean;
type FormatExtFunction = (doc: DocDetail) => string;
interface YuqueConfig {
    /**
     * yuque token, https://www.yuque.com/settings/tokens
     */
    token: string;
    /** 语雀API 路径，默认https://www.yuque.com/api/v2/ */
    baseUrl?: string;
    login: string;
    repo: string;
    onlyPublic?: boolean;
    onlyPublished?: boolean;
    /** 自定义处理器 */
    formatExt?: FormatExtConfig;
}
type YuQueResponse<T> = {
    data: T;
};
/**
 * @see https://www.yuque.com/yuque/developer/userserializer
 */
interface YuqueUser {
    /** 用户编号 */
    id: number;
    /** 类型 [`User`  - 用户, Group - 团队] */
    type: 'User' | 'Group';
    /** 用户个人路径 */
    login: string;
    /** 昵称 */
    name: string;
    description: string;
    /** 头像 URL */
    avatar_url: string;
    /** 创建时间 */
    created_at: Date;
    /** 更新时间 */
    updated_at: Date;
}
/**
 * @see https://www.yuque.com/yuque/developer/bookserializer
 */
interface YuqueBook {
    /** 仓库编号 */
    id: number;
    /** 类型 [Book - 文档] */
    type: 'Book';
    /** 仓库路径 */
    slug: string;
    /** 名称 */
    name: string;
    /** 仓库完整路径 user.login/book.slug */
    namespace: string;
    /** 用户/团队编号 */
    user_id: number;
    /** 用户/团队信息 */
    user: YuqueUser;
    /** 介绍 */
    description: string;
    /** 创建人 User Id */
    creator_id: string;
    /** 公开状态 [1 - 公开, 0 - 私密] */
    public: 1 | 0;
    /** 喜欢数量 */
    likes_count: number;
    /** 订阅数量 */
    watches_count: number;
    /** 创建时间 */
    created_at: Date;
    /** 更新时间 */
    updated_at: Date;
}
/**
 * @see https://www.yuque.com/yuque/developer/docserializer
 */
interface YuqueDocDetail {
    /** 文档编号 */
    id: number;
    /** 文档路径 */
    slug: string;
    /** 标题 */
    title: string;
    /** 仓库编号，就是 repo_id */
    book_id: string;
    /** 仓库信息，就是 repo 信息 */
    book: YuqueBook;
    /** 用户/团队编号 */
    user_id: number;
    /** 用户/团队信息 */
    creator: YuqueUser;
    /** 描述了正文的格式 */
    format: 'lake' | 'markdown';
    /** 正文 Markdown 源代码 */
    body: string;
    /** 草稿 Markdown 源代码 */
    body_draft: string;
    /** 转换过后的正文 HTML */
    body_html: string;
    /** 语雀 lake 格式的文档内容 */
    body_lake: string;
    /** 文档创建人 User Id */
    creator_id: string;
    /** 公开级别 [0 - 私密, 1 - 公开] */
    public: 1 | 0;
    /** 状态 [0 - 草稿, 1 - 发布] */
    status: 1 | 0;
    /** 赞数量 */
    likes_count: number;
    /** 评论数量 */
    comments_count: number;
    /** 文档内容更新时间 */
    content_updated_at: Date;
    /** 删除时间 */
    deleted_at: Date | null;
    /** 创建时间 */
    created_at: Date;
    /** 更新时间 */
    updated_at: Date;
    /** 发布时间 */
    published_at: Date;
    /** 第一次发布时间 */
    first_published_at: Date;
    /** 字数 */
    word_count: number;
}
/** 语雀文档（不带详情）列表返回 */
interface YuqueDoc {
    cover: null | string;
    custom_description: null;
    description: string;
    draft_version: number;
    last_editor: {
        avatar_url: string;
        created_at: string;
        description: string;
        followers_count: number;
        following_count: number;
        id: number;
        login: string;
        name: string;
        type: string;
        updated_at: string;
    };
    last_editor_id: number;
    read_count: number;
    read_status: number;
    view_status: number;
    /** 文档编号 */
    id: number;
    /** 文档路径 */
    slug: string;
    /** 标题 */
    title: string;
    /** 仓库编号，就是 repo_id */
    book_id: string;
    /** 用户/团队编号 */
    user_id: number;
    /** 描述了正文的格式 */
    format: 'lake' | 'markdown';
    /** 公开级别 [0 - 私密, 1 - 公开] */
    public: 1 | 0;
    /** 状态 [0 - 草稿, 1 - 发布] */
    status: 1 | 0;
    /** 赞数量 */
    likes_count: number;
    /** 评论数量 */
    comments_count: number;
    /** 文档内容更新时间 */
    content_updated_at: Date;
    /** 创建时间 */
    created_at: Date;
    /** 更新时间 */
    updated_at: Date;
    /** 发布时间 */
    published_at: Date;
    /** 第一次发布时间 */
    first_published_at: Date;
    /** 字数 */
    word_count: number;
    _index?: number;
}
interface YuqueDocProperties {
    urlname: string;
    title: string;
    date: string;
    updated: string;
    [key: string]: any;
}
type DocUnite = DocDetail & YuqueDocDetail;
interface GetProps {
    body: string;
    properties: YuqueDocProperties;
}

declare class YuqueClient {
    config: YuqueConfig;
    namespace: string;
    catalog: YuqueCatalog[];
    formatExtCtx: FormatExtFunction;
    constructor(config: YuqueConfig);
    /**
     * send api request to yuque
     * @param api
     * @param reqOpts
     */
    request<T>(api: string, reqOpts: RequestOptions): Promise<T>;
    /**
     * 获取目录
     */
    getToc(): Promise<YuqueCatalog[]>;
    /**
     * 获取文章列表(不带详情)
     */
    getDocList(): Promise<YuqueDoc[]>;
    /**
     * 获取文章详情
     */
    getDocDetail(slug: string): Promise<DocUnite>;
    /**
     * 获取文章详情列表
     * @param cachedDocs
     * @param ids
     */
    getDocDetailList(cachedDocs: YuqueDoc[], ids: string[]): Promise<DocDetail[]>;
}

/**
 * Yuque SDK
 * @class
 */
declare class Yuque {
    config: YuqueConfig;
    ctx: YuqueClient;
    pages: YuqueDoc[];
    constructor(options: YuqueConfig);
    /**
     * list docs of a repo
     * @return {Promise<DocDetail[]>} return docs
     */
    getDocList(): Promise<BaseDoc[]>;
    /**
     * 获取文章详情列表
     * @param ids 需要下载的doc_id列表
     */
    getDocDetailList(ids: string[]): Promise<_elog_types.DocDetail[]>;
}

export { DocUnite, FormatExtConfig, FormatExtFunction, GetProps, YuQueResponse, YuqueBook, YuqueConfig, YuqueDoc, YuqueDocDetail, YuqueDocProperties, YuqueUser, Yuque as default };

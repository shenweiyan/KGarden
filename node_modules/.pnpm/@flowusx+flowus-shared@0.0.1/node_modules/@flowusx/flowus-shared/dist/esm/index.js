var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// src/out.ts
import * as shell from "shelljs";
import chalk from "chalk";
import { chunk } from "lodash";

// src/const/out.ts
var _a, _b;
var __columns = (_b = (_a = process == null ? void 0 : process.stdout) == null ? void 0 : _a.columns) != null ? _b : 120;

// src/out.ts
import process2 from "process";
function println(level, head, content) {
  const color = {
    [0 /* ACCESS */]: chalk.blue,
    [1 /* INFO */]: chalk.green,
    [2 /* WARNING */]: chalk.yellow,
    [3 /* ERROR */]: chalk.red,
    [4 /* DEBUG */]: chalk.magenta
  };
  const MIN_HEAD_LENGTH = 10;
  const emptyHead = head.replace(/[\u4e00-\u9fa5]/g, "aa");
  const headLength = Math.max(emptyHead.length + 2, MIN_HEAD_LENGTH);
  const fillLength = Math.max(MIN_HEAD_LENGTH - emptyHead.length, 0);
  if (!content) {
    shell.echo(color[level](head));
    return;
  }
  if (content && typeof content !== "string") {
    shell.echo(color[level](head));
    shell.echo(content);
    return;
  }
  ;
  (content != null ? content : "").replace("/\r\n/g", "\n").split("\n").map((c) => chunk(c, __columns - headLength).map((str) => str.join(""))).reduce((r, c) => r.concat(c)).forEach((str, i) => {
    const _head = i ? " ".repeat(headLength) : color[level](`${head}${" ".repeat(fillLength)}`);
    shell.echo(_head + str);
  });
}
var out = {
  access(head, content) {
    println(0 /* ACCESS */, head, content);
  },
  info(head, content) {
    println(1 /* INFO */, head, content);
  },
  warning(head, content) {
    println(2 /* WARNING */, head, content);
  },
  err(head, content) {
    println(3 /* ERROR */, head, content);
  },
  debug(head, content) {
    process2.env.DEBUG && println(4 /* DEBUG */, head, content);
  }
};
var out_default = out;

// src/request.ts
import { request as req } from "urllib";
var request = (url, reqOpts) => __async(void 0, null, function* () {
  const opts = __spreadValues({
    contentType: "json",
    dataType: "json",
    headers: __spreadValues({
      "User-Agent": "FlowUs X",
      authority: "flowus.cn",
      app_version_name: "1.51.0"
    }, reqOpts == null ? void 0 : reqOpts.headers),
    compressed: true,
    // 超时时间 60s
    timeout: Number(process.env.REQUEST_TIMEOUT) || 6e4
  }, reqOpts);
  out_default.debug("API\u8BF7\u6C42", JSON.stringify(opts));
  return req(url, opts);
});

// src/index.ts
import { HttpClientResponse as HttpClientResponse2, RequestOptions as RequestOptions2 } from "urllib";

// src/const/flowus.ts
var BlockType = /* @__PURE__ */ ((BlockType2) => {
  BlockType2[BlockType2["Doc"] = 0] = "Doc";
  BlockType2[BlockType2["Text"] = 1] = "Text";
  BlockType2[BlockType2["Todo"] = 3] = "Todo";
  BlockType2[BlockType2["Unordered_List"] = 4] = "Unordered_List";
  BlockType2[BlockType2["Numbered_List"] = 5] = "Numbered_List";
  BlockType2[BlockType2["Toggle"] = 6] = "Toggle";
  BlockType2[BlockType2["Title"] = 7] = "Title";
  BlockType2[BlockType2["Dividing"] = 9] = "Dividing";
  BlockType2[BlockType2["Quote"] = 12] = "Quote";
  BlockType2[BlockType2["Emphasis_Text"] = 13] = "Emphasis_Text";
  BlockType2[BlockType2["Media"] = 14] = "Media";
  BlockType2[BlockType2["Embed_Folder"] = 15] = "Embed_Folder";
  BlockType2[BlockType2["Reference_Page"] = 16] = "Reference_Page";
  BlockType2[BlockType2["Data_Table"] = 18] = "Data_Table";
  BlockType2[BlockType2["Data_Table_Inline"] = 19] = "Data_Table_Inline";
  BlockType2[BlockType2["Embed_Webpage"] = 20] = "Embed_Webpage";
  BlockType2[BlockType2["Web_Bookmark"] = 21] = "Web_Bookmark";
  BlockType2[BlockType2["Equation"] = 23] = "Equation";
  BlockType2[BlockType2["Code"] = 25] = "Code";
  BlockType2[BlockType2["Embed_Media"] = 26] = "Embed_Media";
  BlockType2[BlockType2["Table"] = 27] = "Table";
  BlockType2[BlockType2["Table_Row"] = 28] = "Table_Row";
  BlockType2[BlockType2["Reference_Data_Table"] = 29] = "Reference_Data_Table";
  BlockType2[BlockType2["Sync_Block"] = 31] = "Sync_Block";
  BlockType2[BlockType2["Reference_Data_Table_Page"] = 33] = "Reference_Data_Table_Page";
  BlockType2[BlockType2["Mind_Map"] = 36] = "Mind_Map";
  BlockType2[BlockType2["Mind_Map_Inline"] = 37] = "Mind_Map_Inline";
  BlockType2[BlockType2["Toggle_Title"] = 38] = "Toggle_Title";
  return BlockType2;
})(BlockType || {});
var BlockTypeText = {
  [0 /* Doc */]: "\u6587\u6863",
  [1 /* Text */]: "\u6B63\u6587",
  [3 /* Todo */]: "\u5F85\u529E\u5217\u8868",
  [4 /* Unordered_List */]: "\u9879\u76EE\u5217\u8868",
  [5 /* Numbered_List */]: "\u7F16\u53F7\u5217\u8868",
  [6 /* Toggle */]: "\u6298\u53E0\u5217\u8868",
  [7 /* Title */]: "\u6807\u9898",
  [9 /* Dividing */]: "\u5206\u5272\u7EBF",
  [12 /* Quote */]: "\u5F15\u8FF0\u6587\u5B57",
  [13 /* Emphasis_Text */]: "\u7740\u91CD\u6587\u5B57",
  [14 /* Media */]: "\u5A92\u4F53",
  [15 /* Embed_Folder */]: "\u6587\u4EF6\u5939",
  [16 /* Reference_Page */]: "\u5F15\u7528\u9875\u9762",
  [18 /* Data_Table */]: "\u591A\u7EF4\u8868",
  [19 /* Data_Table_Inline */]: "\u5185\u5D4C\u591A\u7EF4\u8868",
  [20 /* Embed_Webpage */]: "\u5D4C\u5165\u7F51\u9875",
  [21 /* Web_Bookmark */]: "\u7F51\u9875\u4E66\u7B7E",
  [23 /* Equation */]: "\u6570\u5B66\u516C\u5F0F",
  [25 /* Code */]: "\u4EE3\u7801\u7247\u6BB5",
  [26 /* Embed_Media */]: "\u5D4C\u5165\u5A92\u4F53",
  [27 /* Table */]: "\u8868\u683C",
  [28 /* Table_Row */]: "\u8868\u683C\u884C",
  [29 /* Reference_Data_Table */]: "\u5F15\u7528\u591A\u7EF4\u8868",
  [36 /* Mind_Map */]: "\u601D\u7EF4\u5BFC\u56FE",
  [37 /* Mind_Map_Inline */]: "\u5185\u5D4C\u601D\u7EF4\u5BFC\u56FE\u9875\u9762",
  [38 /* Toggle_Title */]: "\u6298\u53E0\u6807\u9898"
};
export {
  BlockType,
  BlockTypeText,
  HttpClientResponse2 as HttpClientResponse,
  RequestOptions2 as RequestOptions,
  out_default as out,
  request
};
//# sourceMappingURL=index.js.map